{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","validationFunc","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasValidationError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","pattern","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasErrors","trim","test","onSubmit","newMovie","preventDefault","prev","disabled","App","moviesFromServer","setMovies","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a4c3ad4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validationFunc?: () => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  validationFunc = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const hasValidationError = touched && !validationFunc();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasValidationError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n          // onFocus={() => setTouched(false)}\n        />\n      </div>\n\n      {(hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )) || (hasValidationError && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const isTitleRequired = true;\n  const [description, setDescription] = useState('');\n  const isDescriptionRequired = false;\n  const [imgUrl, setImgUrl] = useState('');\n  const isImageUrlRequired = true;\n  const [imdbUrl, setImdbUrl] = useState('');\n  const isImdbUrlRequired = true;\n  const [imdbId, setImdbId] = useState('');\n  const isImdbIdRequired = true;\n  const hasErrors = (isTitleRequired && !title.trim())\n    || (isDescriptionRequired && !description.trim())\n    || (isImageUrlRequired && !imgUrl.trim())\n    || (isImdbUrlRequired && !imdbUrl.trim())\n    || (isImdbIdRequired && !imdbId.trim())\n    || !pattern.test(imgUrl)\n    || !pattern.test(imdbUrl);\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const onFormSubmit = (event: React.FormEvent) => {\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n    setCount(prev => prev + 1);\n    onAdd(newMovie);\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={onFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required={isTitleRequired}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n        required={isDescriptionRequired}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required={isImageUrlRequired}\n        validationFunc={() => pattern.test(imgUrl)}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required={isImdbUrlRequired}\n        validationFunc={() => pattern.test(imdbUrl)}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required={isImdbIdRequired}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={hasErrors}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie) => setMovies(prev => prev.concat(movie))} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}